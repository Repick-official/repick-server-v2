version: 0.2

env:
  variables:
    AWS_REGION: "ap-northeast-2"
    ECR_REPOSITORY: "repick-repo:latest"

  parameter-store:
    ECR_REGISTRY: "ECR_REGISTRY"
    APPLICATION_SECRET: "application-secrets"

phases:
  install:
    runtime-versions:
      java: corretto11
      run-as: root
      commands:
        - export JAVA_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
        - export JDK_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
        - export JRE_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
        - export JAVA_HOME="$JAVA_17_HOME"
        - export JRE_HOME="$JRE_17_HOME"
        - export JDK_HOME="$JDK_17_HOME"
        - |-
          export GNUPGHOME="$(mktemp -d)" \
            && curl -fL -o corretto.key https://yum.corretto.aws/corretto.key \
            && gpg --batch --import corretto.key \
            && gpg --batch --export --armor '6DC3636DAE534049C8B94623A122542AB04F24E3' > corretto.key \
            && rpm --import corretto.key \
            && rm -r "$GNUPGHOME" corretto.key \
            && curl -fL -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo \
            && grep -q '^gpgcheck=1' /etc/yum.repos.d/corretto.repo \
            && yum install -y java-17-amazon-corretto-devel \
            && (find /usr/lib/jvm/java-17-amazon-corretto.x86_64 -name src.zip -delete || true) \
            && yum install -y fontconfig
          - |-
            for tool_path in "$JAVA_HOME"/bin/*;
              do tool=`basename "$tool_path"`;
                if [ $tool != 'java-rmi.cgi' ];
                then
                  rm -f /usr/bin/$tool /var/lib/alternatives/$tool \
                    && update-alternatives --install /usr/bin/$tool $tool $tool_path 20000;
            fi;
          done

  pre_build:
    commands:
      - echo "Setting up resources and secrets"
      - mkdir -p ./src/main/resources
      - mkdir -p ./src/main/resources/key
      - rm -f ./src/main/resources/application.yml
      - touch ./src/main/resources/application.yml

      - echo "Logging into Amazon ECR"
      - aws ecr get-login --no-include-email --region $AWS_REGION

  build:
    commands:
      - echo "Building application with Gradle"
      - ./gradlew bootJar
      - echo "Building Docker image"
      - docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .

  post_build:
    commands:
      - echo "Pushing Docker image to Amazon ECR"
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY
artifacts:
  files:
    - '**/*'